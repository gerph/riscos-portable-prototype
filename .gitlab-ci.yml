# Definition for CI within GitLab
# Note:
#    Prefix any job name with a '.' to disable.
#


# Enable submodules
variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: none
  BUILD32: 1


# Common definitions for the jobs
.common: &common
  before_script:
    - git submodule sync ci
    - git submodule update --init ci
  artifacts:
    when: always
    paths:
      - artifacts
      - ci-logs
  dependencies: []


#### Exports ####
export-headers-riscos:
  <<: *common
  stage: export
  script:
    - ci/build.sh headers

export-libs-riscos:
  <<: *common
  stage: export
  script:
    - ci/build.sh libs --upload


#### Builds ####
build-modules-riscos:
  <<: *common
  stage: build
  script:
    - ci/build.sh ram --upload


build-module-riscos-service:
  stage: build
  script:
    # Fetch the build client
    - curl -s -L -o riscos-build-online https://github.com/gerph/robuild-client/releases/download/v0.05/riscos-build-online && chmod +x riscos-build-online

    # Zip up the source to send to robuild
    - zip -q9r /tmp/source-archive.zip * .robuild.yaml

    # Send the archive file to build service
    - ./riscos-build-online -i /tmp/source-archive.zip -a off -t 60 -o /tmp/built

    # Rename the file we got
    - |
      if [[ -f VersionNum ]] ; then
          version=$(sed '/MajorVersion / ! d ; s/.*MajorVersion *"\(.*\)"/\1/' VersionNum)
      else
          version=$(git rev-parse --short HEAD)
      fi
      echo "This is version: $version"
      if [ -f /tmp/built,a91 ] ; then
          cp /tmp/built,a91 "PortablePrototype-$version.zip"
      else
          echo "No archive was built?"
          exit 1
      fi

  artifacts:
    when: always
    paths:
      - "PortablePrototype-*.zip"

  tags:
    - linux

#### Stages to execute ####
stages:
  - export
  - build
